"""empty message

Revision ID: db9a6c74b27c
Revises: 
Create Date: 2025-02-17 00:03:59.160428

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'db9a6c74b27c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('perm_id', sa.Integer(), nullable=False),
    sa.Column('perm_name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('perm_id'),
    sa.UniqueConstraint('perm_name')
    )
    op.create_table('roles',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('role_name')
    )
    op.create_table('threat_intels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cve_id', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('cvss_score', sa.Float(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('published_date', sa.DateTime(), nullable=True),
    sa.Column('last_modified', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cve_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('scan_tasks',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('target_url', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('pending', 'running', 'completed', 'failed'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_table('fuzz_results',
    sa.Column('fuzz_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('input_data', sa.Text(), nullable=False),
    sa.Column('crash_detail', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['scan_tasks.task_id'], ),
    sa.PrimaryKeyConstraint('fuzz_id')
    )
    op.create_table('risk_reports',
    sa.Column('report_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('coverage_rate', sa.Float(), nullable=False),
    sa.Column('blind_spot', sa.Text(), nullable=True),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['scan_tasks.task_id'], ),
    sa.PrimaryKeyConstraint('report_id')
    )
    op.create_table('task_logs',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('log_message', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['scan_tasks.task_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_table('user_feedbacks',
    sa.Column('feedback_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('vul_description', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'resolved'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['scan_tasks.task_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('feedback_id')
    )
    op.create_table('vulnerabilities',
    sa.Column('vul_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('cve_id', sa.String(length=20), nullable=True),
    sa.Column('severity', sa.Enum('critical', 'high', 'medium', 'low'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('solution', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['scan_tasks.task_id'], ),
    sa.PrimaryKeyConstraint('vul_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vulnerabilities')
    op.drop_table('user_feedbacks')
    op.drop_table('task_logs')
    op.drop_table('risk_reports')
    op.drop_table('fuzz_results')
    op.drop_table('scan_tasks')
    op.drop_table('users')
    op.drop_table('threat_intels')
    op.drop_table('roles')
    op.drop_table('permissions')
    # ### end Alembic commands ###
