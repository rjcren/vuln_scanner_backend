'''漏洞模型'''
from sqlalchemy import inspect
from app.extensions import db

class Vulnerability(db.Model):
    __tablename__ = 'vulnerabilities'
    vul_id = db.Column(db.Integer, primary_key=True)
    task_id = db.Column(db.Integer, db.ForeignKey('scan_tasks.task_id', ondelete='CASCADE'), nullable=False)
    cve_id = db.Column(db.String(20))
    severity = db.Column(db.Enum('critical', 'high', 'medium', 'low'), nullable=False)
    description = db.Column(db.Text)
    solution = db.Column(db.Text)
    task = db.relationship('ScanTask', back_populates='vulnerabilities')

    def to_dict(self):
        return {c.key: getattr(self, c.key) for c in inspect(self).mapper.column_attrs}